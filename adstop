#!/usr/bin/env bash

getCurPath() {
    # Get the current path
    curPath="${0%/*}"
}



loadConf() {
    # Load the custom config file or default template
    if [[ -f "${curPath}/adstop.conf" ]]; then
        # adstop.conf exists, source it
        . "${curPath}/adstop.conf"
    else
        # adstop.conf doesn't exist, source the template file
        . "${curPath}/adstop.tpl"
    fi
}



createTmpDir() {
    # Create temporary dir
    tmpDir='adstop.XXXXXXXXXX';
    tmpStorage=$(mktemp -t -d "${tmpDir}") || {
        exit 1;
    }
}



deleteTmpDir() {
    # Setup trap to clean tmp dir
    trap 'rm -rf "${tmpStorage}"' 0     # remove directory when script finishes
    trap 1 2 3 15                       # terminate script when receiving signal
}



parseDomainList() {
    # Go through domainList
    for i in "${domainList[@]}"; do
        curl -o "${tmpStorage}/domainList.blk" "${i}"
        grep -vE '^#|^;|^:|^\[|^!|^$' "${tmpStorage}/domainList.blk" > "${tmpStorage}/domainList2.blk"
        while IFS="" read -r -u "${fd}" line || [ -n "${line}" ]; do
            printf '0.0.0.0 %s\n' "${line}" >> "${tmpStorage}/hosts.blk"
        done {fd}< "${tmpStorage}/domainList2.blk"
    done
}



parseLocalList() {
    # Go through localList array
    for i in "${localList[@]}"; do
        curl -o "${tmpStorage}/localList.blk" "${i}"
        sed -i 's/127.0.0.1/0.0.0.0/g' "${tmpStorage}/localList.blk"
        cat "${tmpStorage}/localList.blk" >> "${tmpStorage}/hosts.blk"
    done
}



parseZeroList() {
    # Go through zeroList array
    for i in "${zeroList[@]}"; do
        curl -o "${tmpStorage}/zeroList.blk" "${i}"
        cat "${tmpStorage}/zeroList.blk" >> "${tmpStorage}/hosts.blk"
    done
}



cleanupList() {
    grep -vE '^#|^;|^:|^\[|^!|^$' "${tmpStorage}/hosts.blk" > "${tmpStorage}/hosts.tmp1"
    sort -o "${tmpStorage}/hosts.tmp2" "${tmpStorage}/hosts.tmp1"
    uniq -u "${tmpStorage}/hosts.tmp2" "${tmpStorage}/hosts.tmp3"
    printf "%s\n" "${customTop}" > "${tmpStorage}/hosts.top"
    printf "%s\n" "${customBottom}" > "${tmpStorage}/hosts.bottom"
    cat "${tmpStorage}/hosts.top" "${tmpStorage}/hosts.tmp3" "${tmpStorage}/hosts.bottom" > "${tmpStorage}/hosts"
}



main() {
    getCurPath
    createTmpDir
    deleteTmpDir
    loadConf
    parseDomainList
    parseLocalList
    parseZeroList
    cleanupList
    finalize
}

main